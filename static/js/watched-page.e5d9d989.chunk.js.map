{"version":3,"sources":["redux/userList/userListActions.js","pages/UserList/UserList.module.css","pages/UserList/FilmListltem.module.css","pages/UserList/WatchedList/WatchedFilm/WatchedFilm.js","pages/UserList/WatchedList/WatchedList.js","pages/UserList/WatchedList/WatchedListContainer.js"],"names":["__webpack_require__","d","__webpack_exports__","addFilmToFavoritesActionCreator","markAsWatchedActionCreator","deleteFromFavorites","deleteFromWatched","_actionTypes__WEBPACK_IMPORTED_MODULE_0__","film","type","actionTypes","ADD_TO_FAVORITES","payload","MARK_WATCHED","id","DElETE_FROM_FAVORITES","DELETE_FROM_WATCHED","module","exports","title","ul","navlink","navlinkActive","filmsUl","filmsSection","filmItem","masonryGridFilm","filmItemWrapper","button","link","img","WatchedFilm","_ref","react_default","a","createElement","className","styles","src","poster_path","concat","alt","onClick","react_router_dom","to","WatchedList","watchedList","length","map","key","WatchedList_WatchedFilm_WatchedFilm","connect","state","dispatch"],"mappings":"yFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAA,IAAAC,EAAAP,EAAA,GAEaG,EAAkC,SAAAK,GAAI,MAAK,CACtDC,KAAMC,IAAYC,iBAClBC,QAAS,CACPJ,UAISJ,EAA6B,SAAAI,GAAI,MAAK,CACjDC,KAAMC,IAAYG,aAClBD,QAAS,CACPJ,UAISH,EAAsB,SAAAS,GAAE,MAAK,CACxCL,KAAMC,IAAYK,sBAClBH,QAAS,CACPE,QAISR,EAAoB,SAAAQ,GAAE,MAAK,CACtCL,KAAMC,IAAYM,oBAClBJ,QAAS,CACPE,4BCzBJG,EAAAC,QAAA,CAAkBC,MAAA,wBAAAC,GAAA,qBAAAC,QAAA,0BAAAC,cAAA,gCAAAC,QAAA,0BAAAC,aAAA,+BAAAC,SAAA,2BAAAC,gBAAA,uDCAlBT,EAAAC,QAAA,CAAkBS,gBAAA,sCAAAC,OAAA,6BAAAC,KAAA,2BAAAC,IAAA,yICkCHC,EA9BK,SAAAC,GAAiC,IAA9BxB,EAA8BwB,EAA9BxB,KAAMF,EAAwB0B,EAAxB1B,kBAC3B,OACE2B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cAAM3B,EAAKW,MAAX,KAAwB,IACxBc,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAOP,IAClBQ,IACE9B,EAAK+B,YAAL,mCAAAC,OACuChC,EAAK+B,aACxC,gDAENE,IAAI,gBAENR,EAAAC,EAAAC,cAAA,UAAQ1B,KAAK,SAASiC,QAAS,kBAAMpC,EAAkBE,EAAKM,MAA5D,SACS,KACC,IACVmB,EAAAC,EAAAC,cAAA,UAAQ1B,KAAK,UACXwB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,GAAE,IAAAJ,OAAMhC,EAAKW,MAAX,KAAAqB,OAAoBhC,EAAKM,KAApC,eAAgE,KACxD,MCUD+B,EA1BK,SAAAb,GAAwC,IAArCc,EAAqCd,EAArCc,YAAaxC,EAAwB0B,EAAxB1B,kBAClC,OACE2B,EAAAC,EAAAC,cAAA,WAASC,UAAWC,IAAOb,cACxB,IACAsB,EAAYC,OAAS,EACpBd,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOd,SACnB,IACAuB,EAAYE,IAAI,SAAAxC,GAAI,OACnByB,EAAAC,EAAAC,cAAA,MAAIc,IAAKzC,EAAKM,IACZmB,EAAAC,EAAAC,cAACe,EAAD,CAAa1C,KAAMA,EAAMF,kBAAmBA,IAAsB,OAElE,KAGN2B,EAAAC,EAAAC,cAAA,WACG,IADH,gEAEgE,KAE/D,cCdMgB,sBAPS,SAAAC,GAAK,MAAK,CAChCN,YAAaM,EAAMN,cAGM,SAAAO,GAAQ,MAAK,CACtC/C,kBAAmB,SAAAQ,GAAE,OAAIuC,EAAS/C,YAAkBQ,OAEvCqC,CAGbN","file":"static/js/watched-page.e5d9d989.chunk.js","sourcesContent":["import actionTypes from '../actionTypes';\n\nexport const addFilmToFavoritesActionCreator = film => ({\n  type: actionTypes.ADD_TO_FAVORITES,\n  payload: {\n    film,\n  },\n});\n\nexport const markAsWatchedActionCreator = film => ({\n  type: actionTypes.MARK_WATCHED,\n  payload: {\n    film,\n  },\n});\n\nexport const deleteFromFavorites = id => ({\n  type: actionTypes.DElETE_FROM_FAVORITES,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteFromWatched = id => ({\n  type: actionTypes.DELETE_FROM_WATCHED,\n  payload: {\n    id,\n  },\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"UserList_title__32P2A\",\"ul\":\"UserList_ul__fnxzr\",\"navlink\":\"UserList_navlink__3qfRQ\",\"navlinkActive\":\"UserList_navlinkActive__To4k6\",\"filmsUl\":\"UserList_filmsUl__1s87y\",\"filmsSection\":\"UserList_filmsSection__PnMow\",\"filmItem\":\"UserList_filmItem__1Tm6P\",\"masonryGridFilm\":\"UserList_masonryGridFilm__18ss3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmItemWrapper\":\"FilmListltem_filmItemWrapper__FjDzj\",\"button\":\"FilmListltem_button__3PXUW\",\"link\":\"FilmListltem_link__2YNuq\",\"img\":\"FilmListltem_img__7aVnc\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport styles from '../../FilmListltem.module.css';\n\nconst WatchedFilm = ({ film, deleteFromWatched }) => {\n  return (\n    <div>\n      <h3> {film.title} </h3>{' '}\n      <img\n        className={styles.img}\n        src={\n          film.poster_path\n            ? `https://image.tmdb.org/t/p/w200/${film.poster_path}`\n            : 'https://www.viser.edu.rs/images/no_photo.jpeg'\n        }\n        alt=\"film poster\"\n      />\n      <button type=\"button\" onClick={() => deleteFromWatched(film.id)}>\n        Delete{' '}\n      </button>{' '}\n      <button type=\"button\">\n        <NavLink to={`/${film.title}/${film.id}`}> Show more </NavLink>{' '}\n      </button>{' '}\n    </div>\n  );\n};\nWatchedFilm.propTypes = {\n  film: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n  }).isRequired,\n  deleteFromWatched: PropTypes.func.isRequired,\n};\nexport default WatchedFilm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from '../UserList.module.css';\n\nimport WatchedFilm from './WatchedFilm/WatchedFilm';\n\nconst WatchedList = ({ watchedList, deleteFromWatched }) => {\n  return (\n    <section className={styles.filmsSection}>\n      {' '}\n      {watchedList.length > 0 ? (\n        <ul className={styles.filmsUl}>\n          {' '}\n          {watchedList.map(film => (\n            <li key={film.id}>\n              <WatchedFilm film={film} deleteFromWatched={deleteFromWatched} />{' '}\n            </li>\n          ))}{' '}\n        </ul>\n      ) : (\n        <div>\n          {' '}\n          This folder is empty.Save any film you have watched to start!{' '}\n        </div>\n      )}{' '}\n    </section>\n  );\n};\nWatchedList.propTypes = {\n  watchedList: PropTypes.arrayOf().isRequired,\n  deleteFromWatched: PropTypes.func.isRequired,\n};\nexport default WatchedList;\n","import { connect } from 'react-redux';\nimport WatchedList from './WatchedList';\nimport { deleteFromWatched } from '../../../redux/userList/userListActions';\n\nconst mapStateToProps = state => ({\n  watchedList: state.watchedList,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteFromWatched: id => dispatch(deleteFromWatched(id)),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(WatchedList);\n"],"sourceRoot":""}