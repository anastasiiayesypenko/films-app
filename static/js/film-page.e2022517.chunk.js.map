{"version":3,"sources":["redux/userList/userListActions.js","redux/filmsSearch/filmsSearchOperations.js","redux/filmsSearch/filmsSearchActions.js","pages/FilmPage/FilmPage.js","pages/FilmPage/FilmPageContainer.js"],"names":["__webpack_require__","d","__webpack_exports__","addFilmToFavoritesActionCreator","markAsWatchedActionCreator","deleteFromFavorites","deleteFromWatched","_actionTypes__WEBPACK_IMPORTED_MODULE_0__","film","type","actionTypes","ADD_TO_FAVORITES","payload","MARK_WATCHED","id","DElETE_FROM_FAVORITES","DELETE_FROM_WATCHED","API_KEY","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_filmsSearchActions__WEBPACK_IMPORTED_MODULE_1__","fetchFilms","query","arguments","length","undefined","page","dispatch","filmsLoadingActionCreator","axios","get","concat","then","response","filmsSuccessActionCreator","data","results","setPagesActionCreator","total_pages","catch","error","filmsErrorActionCreator","setFilmQueryActionCreator","setActivePageActionCreator","FILM_LOADING","films","FILM_SEARCH_SUCCESS","SET_FILM_QUERY","totalPages","SET_PAGES","activePage","SET_ACTIVE_PAGE","FILM_SEARCH_ERROR","FilmPage","_ref","match","addFilmToFavorites","markAsWatched","favoritesList","watchedList","_useState","useState","_useState2","Object","slicedToArray","chosenFilm","setChosenFilm","useEffect","find","params","title","filmsResult","Number","console","log","react_default","a","createElement","Fragment","src","poster_path","alt","vote_average","overview","onClick","connect","state"],"mappings":"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","file":"static/js/film-page.e2022517.chunk.js","sourcesContent":["import actionTypes from '../actionTypes';\n\nexport const addFilmToFavoritesActionCreator = film => ({\n  type: actionTypes.ADD_TO_FAVORITES,\n  payload: {\n    film,\n  },\n});\n\nexport const markAsWatchedActionCreator = film => ({\n  type: actionTypes.MARK_WATCHED,\n  payload: {\n    film,\n  },\n});\n\nexport const deleteFromFavorites = id => ({\n  type: actionTypes.DElETE_FROM_FAVORITES,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteFromWatched = id => ({\n  type: actionTypes.DELETE_FROM_WATCHED,\n  payload: {\n    id,\n  },\n});\n","import axios from 'axios';\nimport {\n  filmsLoadingActionCreator,\n  filmsSuccessActionCreator,\n  setPagesActionCreator,\n  filmsErrorActionCreator,\n} from './filmsSearchActions';\n\nexport const API_KEY = 'bcf1e9109b9838d979a3eda6f6128d7e';\n\nconst fetchFilms = (query = '', page) => dispatch => {\n  dispatch(filmsLoadingActionCreator());\n  axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=${page}&include_adult=false`,\n    )\n    .then(response => {\n      dispatch(filmsSuccessActionCreator(response.data.results));\n      dispatch(setPagesActionCreator(response.data.total_pages));\n    })\n    .catch(error => dispatch(filmsErrorActionCreator(error)));\n};\nexport default fetchFilms;\n","import actionTypes from '../actionTypes';\n\nexport const filmsLoadingActionCreator = () => ({\n  type: actionTypes.FILM_LOADING,\n});\nexport const filmsSuccessActionCreator = films => ({\n  type: actionTypes.FILM_SEARCH_SUCCESS,\n  payload: {\n    films,\n  },\n});\nexport const setFilmQueryActionCreator = query => ({\n  type: actionTypes.SET_FILM_QUERY,\n  payload: {\n    query,\n  },\n});\nexport const setPagesActionCreator = totalPages => ({\n  type: actionTypes.SET_PAGES,\n  payload: {\n    totalPages,\n  },\n});\nexport const setActivePageActionCreator = activePage => ({\n  type: actionTypes.SET_ACTIVE_PAGE,\n  payload: {\n    activePage,\n  },\n});\nexport const filmsErrorActionCreator = error => ({\n  type: actionTypes.FILM_SEARCH_ERROR,\n  payload: {\n    error,\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { API_KEY } from '../../redux/filmsSearch/filmsSearchOperations';\n\nconst FilmPage = ({\n  films,\n  match,\n  addFilmToFavorites,\n  markAsWatched,\n  favoritesList,\n  watchedList,\n  deleteFromFavorites,\n  deleteFromWatched,\n}) => {\n  const [chosenFilm, setChosenFilm] = useState('');\n  useEffect(\n    () =>\n      setChosenFilm(films && films.find(film => film.id === match.params.id)),\n    // eslint-disable-next-line\n    [match.params.id],\n  );\n  if (!chosenFilm) {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${match.params.title}&include_adult=false`,\n      )\n      .then(response => {\n        const filmsResult = response.data.results;\n        setChosenFilm(\n          filmsResult.find(film => film.id === Number(match.params.id)),\n        );\n      })\n      .catch(error => console.log(error));\n  }\n\n  const addToFavorites = () => {\n    addFilmToFavorites(chosenFilm);\n  };\n  const addToWatched = () => {\n    markAsWatched(chosenFilm);\n  };\n  const deleteChosenFilmFromFavorites = () => {\n    deleteFromFavorites(chosenFilm.id);\n  };\n  const deleteChosenFilmFromWatched = () => {\n    deleteFromWatched(chosenFilm.id);\n  };\n  return (\n    <section>\n      {' '}\n      {chosenFilm && (\n        <>\n          <h2> {chosenFilm.title} </h2>{' '}\n          <img\n            src={\n              chosenFilm.poster_path\n                ? `https://image.tmdb.org/t/p/w200/${chosenFilm.poster_path}`\n                : 'https://www.viser.edu.rs/images/no_photo.jpeg'\n            }\n            alt=\"film poster\"\n          />\n          <p> {chosenFilm.vote_average || 'No votes'} </p>{' '}\n          <p> {chosenFilm.overview || 'No overview available'} </p>{' '}\n          {favoritesList.find(\n            film => Number(film.id) === Number(chosenFilm.id),\n          ) ? (\n            <button type=\"button\" onClick={deleteChosenFilmFromFavorites}>\n              Delete from fav{' '}\n            </button>\n          ) : (\n            <button type=\"button\" onClick={addToFavorites}>\n              Add to favg{' '}\n            </button>\n          )}{' '}\n          {watchedList.find(\n            film => Number(film.id) === Number(chosenFilm.id),\n          ) ? (\n            <button type=\"button\" onClick={deleteChosenFilmFromWatched}>\n              Delete from watched{' '}\n            </button>\n          ) : (\n            <button type=\"button\" onClick={addToWatched}>\n              Add to watched{' '}\n            </button>\n          )}{' '}\n        </>\n      )}{' '}\n    </section>\n  );\n};\nFilmPage.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  addFilmToFavorites: PropTypes.func.isRequired,\n  markAsWatched: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n  favoritesList: PropTypes.arrayOf().isRequired,\n  watchedList: PropTypes.arrayOf().isRequired,\n  deleteFromFavorites: PropTypes.func.isRequired,\n  deleteFromWatched: PropTypes.func.isRequired,\n};\nexport default FilmPage;\n","import { connect } from 'react-redux';\nimport FilmPage from './FilmPage';\nimport fetchFilms from '../../redux/filmsSearch/filmsSearchOperations';\nimport {\n  addFilmToFavoritesActionCreator,\n  markAsWatchedActionCreator,\n  deleteFromFavorites,\n  deleteFromWatched,\n} from '../../redux/userList/userListActions';\n\nconst mapStateToProps = state => ({\n  films: state.films,\n  favoritesList: state.favoritesList,\n  watchedList: state.watchedList,\n});\nconst mapDispatchToProps = dispatch => ({\n  fetchFilms: (query, page) => dispatch(fetchFilms(query, page)),\n  addFilmToFavorites: film => dispatch(addFilmToFavoritesActionCreator(film)),\n  markAsWatched: film => dispatch(markAsWatchedActionCreator(film)),\n  deleteFromFavorites: id => dispatch(deleteFromFavorites(id)),\n  deleteFromWatched: id => dispatch(deleteFromWatched(id)),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(FilmPage);\n"],"sourceRoot":""}