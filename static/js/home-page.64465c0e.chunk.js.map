{"version":3,"sources":["redux/userList/userListActions.js","redux/filmsSearch/filmsSearchOperations.js","redux/filmsSearch/filmsSearchActions.js","components/Form/Form.js","components/FilmsWrapper/FilmItem/FilmItem.js","components/FilmsWrapper/FilmsWrapper.js","pages/Home/Home.js","pages/Home/HomeContainer.js"],"names":["__webpack_require__","d","__webpack_exports__","addFilmToFavoritesActionCreator","markAsWatchedActionCreator","deleteFromFavorites","deleteFromWatched","_actionTypes__WEBPACK_IMPORTED_MODULE_0__","film","type","actionTypes","ADD_TO_FAVORITES","payload","MARK_WATCHED","id","DElETE_FROM_FAVORITES","DELETE_FROM_WATCHED","API_KEY","fetchFilms","query","dispatch","FILM_LOADING","axios","get","concat","then","response","films","data","results","FILM_SEARCH_SUCCESS","catch","error","FILM_SEARCH_ERROR","filmsErrorActionCreator","Form","_ref","_useState","useState","_useState2","Object","slicedToArray","value","setValue","react_default","a","createElement","onSubmit","e","preventDefault","onChange","target","FilmItem","addFilmToFavorites","markAsWatched","favoritesList","watchedList","className","react_router_dom","to","title","src","poster_path","alt","vote_average","overview","find","chosenFilm","Number","onClick","FilmsWrapper","isLoading","console","log","Loader","length","map","FilmsWrapper_FilmItem_FilmItem","key","Home","Fragment","components_Form_Form","components_FilmsWrapper_FilmsWrapper","connect","state"],"mappings":"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","file":"static/js/home-page.64465c0e.chunk.js","sourcesContent":["import actionTypes from '../actionTypes';\n\nexport const addFilmToFavoritesActionCreator = film => ({\n  type: actionTypes.ADD_TO_FAVORITES,\n  payload: {\n    film,\n  },\n});\n\nexport const markAsWatchedActionCreator = film => ({\n  type: actionTypes.MARK_WATCHED,\n  payload: {\n    film,\n  },\n});\n\nexport const deleteFromFavorites = id => ({\n  type: actionTypes.DElETE_FROM_FAVORITES,\n  payload: {\n    id,\n  },\n});\n\nexport const deleteFromWatched = id => ({\n  type: actionTypes.DELETE_FROM_WATCHED,\n  payload: {\n    id,\n  },\n});\n","import axios from 'axios';\nimport {\n  filmsLoadingActionCreator,\n  filmsSuccessActionCreator,\n  filmsErrorActionCreator,\n} from './filmsSearchActions';\n\nexport const API_KEY = 'bcf1e9109b9838d979a3eda6f6128d7e';\n\nconst fetchFilms = query => dispatch => {\n  dispatch(filmsLoadingActionCreator());\n  axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`,\n    )\n    .then(response =>\n      dispatch(filmsSuccessActionCreator(response.data.results)),\n    )\n    .catch(error => dispatch(filmsErrorActionCreator(error)));\n};\nexport default fetchFilms;\n","import actionTypes from '../actionTypes';\n\nexport const filmsLoadingActionCreator = () => ({\n  type: actionTypes.FILM_LOADING,\n});\nexport const filmsSuccessActionCreator = films => ({\n  type: actionTypes.FILM_SEARCH_SUCCESS,\n  payload: {\n    films,\n  },\n});\nexport const filmsErrorActionCreator = error => ({\n  type: actionTypes.FILM_SEARCH_ERROR,\n  payload: {\n    error,\n  },\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Form = ({ fetchFilms }) => {\n  const [value, setValue] = useState('');\n  const handleValueChange = e => {\n    setValue(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchFilms(value);\n    setValue('');\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" onChange={handleValueChange} value={value} />{' '}\n        <button type=\"submit\"> Submit </button>{' '}\n      </form>{' '}\n    </div>\n  );\n};\nForm.propTypes = {\n  fetchFilms: PropTypes.func.isRequired,\n};\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst FilmItem = ({\n  film,\n  addFilmToFavorites,\n  markAsWatched,\n  favoritesList,\n  watchedList,\n  deleteFromFavorites,\n  deleteFromWatched,\n}) => {\n  const addToFavorites = () => {\n    addFilmToFavorites(film);\n  };\n  const addToWatched = () => {\n    markAsWatched(film);\n  };\n  const deleteChosenFilmFromFavorites = () => {\n    deleteFromFavorites(film.id);\n  };\n  const deleteChosenFilmFromWatched = () => {\n    deleteFromWatched(film.id);\n  };\n  return (\n    <div className=\"filmWrapper\">\n      <NavLink to={`/${film.title}/${film.id}`}>\n        <img\n          src={\n            film.poster_path\n              ? `https://image.tmdb.org/t/p/w200/${film.poster_path}`\n              : 'https://www.viser.edu.rs/images/no_photo.jpeg'\n          }\n          alt=\"film poster\"\n        />\n      </NavLink>{' '}\n      <div>\n        <h3> {film.title} </h3> <p>{film.vote_average || 'no votes'}</p>\n        <p> {film.overview || 'no overview'} </p>{' '}\n        {favoritesList.find(\n          chosenFilm => Number(chosenFilm.id) === Number(film.id),\n        ) ? (\n          <button type=\"button\" onClick={deleteChosenFilmFromFavorites}>\n            Delete from fav{' '}\n          </button>\n        ) : (\n          <button type=\"button\" onClick={addToFavorites}>\n            Add to fav{' '}\n          </button>\n        )}{' '}\n        {watchedList.find(\n          chosenFilm => Number(chosenFilm.id) === Number(film.id),\n        ) ? (\n          <button type=\"button\" onClick={deleteChosenFilmFromWatched}>\n            Delete from watched{' '}\n          </button>\n        ) : (\n          <button type=\"button\" onClick={addToWatched}>\n            Add to watched{' '}\n          </button>\n        )}{' '}\n      </div>{' '}\n      <button type=\"button\">\n        <NavLink to={`/${film.title}/${film.id}`}> Show more </NavLink>{' '}\n      </button>{' '}\n    </div>\n  );\n};\nFilmItem.propTypes = {\n  film: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    poster_path: PropTypes.string.isRequired,\n  }).isRequired,\n  favoritesList: PropTypes.arrayOf().isRequired,\n  watchedList: PropTypes.arrayOf().isRequired,\n  deleteFromFavorites: PropTypes.func.isRequired,\n  deleteFromWatched: PropTypes.func.isRequired,\n  addFilmToFavorites: PropTypes.func.isRequired,\n  markAsWatched: PropTypes.func.isRequired,\n};\n\nexport default FilmItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FilmItem from './FilmItem/FilmItem';\nimport Loader from '../Loader/Loader';\n\nconst FilmsWrapper = ({\n  isLoading,\n  films,\n  error,\n  addFilmToFavorites,\n  markAsWatched,\n  favoritesList,\n  watchedList,\n  deleteFromFavorites,\n  deleteFromWatched,\n}) => {\n  if (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n  return (\n    <section>\n      {' '}\n      {isLoading && <Loader />}\n      {films.length > 0 &&\n        films.map(film => (\n          <FilmItem\n            key={film.id}\n            film={film}\n            addFilmToFavorites={addFilmToFavorites}\n            markAsWatched={markAsWatched}\n            favoritesList={favoritesList}\n            watchedList={watchedList}\n            deleteFromFavorites={deleteFromFavorites}\n            deleteFromWatched={deleteFromWatched}\n          />\n        ))}{' '}\n    </section>\n  );\n};\nFilmsWrapper.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  films: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  error: PropTypes.string.isRequired,\n  favoritesList: PropTypes.arrayOf().isRequired,\n  watchedList: PropTypes.arrayOf().isRequired,\n  deleteFromFavorites: PropTypes.func.isRequired,\n  deleteFromWatched: PropTypes.func.isRequired,\n  addFilmToFavorites: PropTypes.func.isRequired,\n  markAsWatched: PropTypes.func.isRequired,\n};\nexport default FilmsWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Form from '../../components/Form/Form';\nimport FilmWrapper from '../../components/FilmsWrapper/FilmsWrapper';\n\nconst Home = ({\n  fetchFilms,\n  isLoading,\n  films,\n  error,\n  addFilmToFavorites,\n  markAsWatched,\n  favoritesList,\n  watchedList,\n  deleteFromFavorites,\n  deleteFromWatched,\n}) => {\n  return (\n    <>\n      <h2> Home </h2> <Form fetchFilms={fetchFilms} />\n      <FilmWrapper\n        isLoading={isLoading}\n        films={films}\n        error={error}\n        addFilmToFavorites={addFilmToFavorites}\n        markAsWatched={markAsWatched}\n        favoritesList={favoritesList}\n        watchedList={watchedList}\n        deleteFromFavorites={deleteFromFavorites}\n        deleteFromWatched={deleteFromWatched}\n      />{' '}\n    </>\n  );\n};\nHome.propTypes = {\n  fetchFilms: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  films: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  error: PropTypes.string.isRequired,\n  favoritesList: PropTypes.arrayOf().isRequired,\n  watchedList: PropTypes.arrayOf().isRequired,\n  deleteFromFavorites: PropTypes.func.isRequired,\n  deleteFromWatched: PropTypes.func.isRequired,\n  addFilmToFavorites: PropTypes.func.isRequired,\n  markAsWatched: PropTypes.func.isRequired,\n};\nexport default Home;\n","import { connect } from 'react-redux';\nimport fetchFilms from '../../redux/filmsSearch/filmsSearchOperations';\nimport Home from './Home';\nimport {\n  addFilmToFavoritesActionCreator,\n  markAsWatchedActionCreator,\n  deleteFromFavorites,\n  deleteFromWatched,\n} from '../../redux/userList/userListActions';\n\nconst mapStateToProps = state => ({\n  isLoading: state.isLoading,\n  films: state.films,\n  error: state.error,\n  favoritesList: state.favoritesList,\n  watchedList: state.watchedList,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchFilms: query => dispatch(fetchFilms(query)),\n  addFilmToFavorites: film => dispatch(addFilmToFavoritesActionCreator(film)),\n  markAsWatched: film => dispatch(markAsWatchedActionCreator(film)),\n  deleteFromFavorites: id => dispatch(deleteFromFavorites(id)),\n  deleteFromWatched: id => dispatch(deleteFromWatched(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n"],"sourceRoot":""}