{"version":3,"sources":["redux/filmsSearch/filmsSearchOperations.js","redux/filmsSearch/filmsSearchActions.js","components/Form/Form.js","components/FilmsContainer/FilmItem/FilmItem.js","components/FilmsContainer/FilmsContainer.js","pages/Home/Home.js","pages/Home/HomeContainer.js"],"names":["fetchFilms","query","dispatch","type","actionTypes","FILM_LOADING","axios","get","concat","then","response","films","data","results","FILM_SEARCH_SUCCESS","payload","catch","error","FILM_SEARCH_ERROR","filmsErrorActionCreator","Form","_ref","_useState","useState","_useState2","Object","slicedToArray","value","setValue","react_default","a","createElement","onSubmit","e","preventDefault","onChange","target","FilmItem","title","posterPath","voteAverage","overview","className","src","alt","FilmsContainer","isLoading","console","log","Loader","length","map","film","FilmsContainer_FilmItem_FilmItem","key","id","poster_path","vote_average","Home","Fragment","components_Form_Form","components_FilmsContainer_FilmsContainer","mapDispatchToProps","connect","state"],"mappings":"oIAoBeA,EAXI,SAAAC,GAAK,OAAI,SAAAC,GAC1BA,ECR8C,CAC9CC,KAAMC,IAAYC,eDQlBC,IACGC,IADH,qDAAAC,OAJc,mCAId,WAAAA,OAE0EP,EAF1E,yBAIGQ,KAAK,SAAAC,GAAQ,OACZR,GCXmCS,EDWAD,EAASE,KAAKC,QCXJ,CACjDV,KAAMC,IAAYU,oBAClBC,QAAS,CACPJ,YAHqC,IAAAA,IDapCK,MAAM,SAAAC,GAAK,OAAIf,ECPmB,SAAAe,GAAK,MAAK,CAC/Cd,KAAMC,IAAYc,kBAClBH,QAAS,CACPE,UDIyBE,CAAwBF,gCEQtCG,EAvBF,SAAAC,GAAoB,IAAjBrB,EAAiBqB,EAAjBrB,WAAiBsB,EACLC,mBAAS,IADJC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACxBK,EADwBH,EAAA,GACjBI,EADiBJ,EAAA,GAU/B,OACEK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,SAPW,SAAAC,GACnBA,EAAEC,iBACFlC,EAAW2B,GACXC,EAAS,MAKLC,EAAAC,EAAAC,cAAA,SAAO5B,KAAK,OAAOgC,SAXC,SAAAF,GACxBL,EAASK,EAAEG,OAAOT,QAUkCA,MAAOA,IAEvDE,EAAAC,EAAAC,cAAA,UAAQ5B,KAAK,UAAb,eCUOkC,EAzBE,SAAAhB,GAAkD,IAA/CiB,EAA+CjB,EAA/CiB,MAAOC,EAAwClB,EAAxCkB,WAAYC,EAA4BnB,EAA5BmB,YAAaC,EAAepB,EAAfoB,SAClD,OACEZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,eACbb,EAAAC,EAAAC,cAAA,OACEY,IACEJ,EAAU,mCAAA/B,OAC6B+B,GACnC,gDAENK,IAAI,gBAENf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cAAMO,EAAN,KADF,IACqBT,EAAAC,EAAAC,cAAA,SAAIS,GADzB,IAC0CX,EAAAC,EAAAC,cAAA,aAAKU,EAAL,KAAoB,IAC5DZ,EAAAC,EAAAC,cAAA,UAAQ5B,KAAK,UAAb,eAA2C,KACtC,cCcE0C,EA1BQ,SAAAxB,GAAiC,IAA9ByB,EAA8BzB,EAA9ByB,UAAWnC,EAAmBU,EAAnBV,MAAOM,EAAYI,EAAZJ,MAI1C,OAHIA,GACF8B,QAAQC,IAAI/B,GAGZY,EAAAC,EAAAC,cAAA,eACG,IACAe,GAAajB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,MAAY,IACzBtC,EAAMuC,OAAS,GACdvC,EAAMwC,IAAI,SAAAC,GAAI,OACZvB,EAAAC,EAAAC,cAACsB,EAAD,CACEC,IAAKF,EAAKG,GACVjB,MAAOc,EAAKd,MACZC,WAAYa,EAAKI,YACjBhB,YAAaY,EAAKK,aAClBhB,SAAUW,EAAKX,aAEf,MCHGiB,EAdF,SAAArC,GAA6C,IAA1CrB,EAA0CqB,EAA1CrB,WAAY8C,EAA8BzB,EAA9ByB,UAAWnC,EAAmBU,EAAnBV,MAAOM,EAAYI,EAAZJ,MAC5C,OACEY,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6B,SAAA,KACE9B,EAAAC,EAAAC,cAAA,oBADF,IACkBF,EAAAC,EAAAC,cAAC6B,EAAD,CAAM5D,WAAYA,IAClC6B,EAAAC,EAAAC,cAAC8B,EAAD,CAAef,UAAWA,EAAWnC,MAAOA,EAAOM,MAAOA,IAAU,MCCpE6C,EAAqB,CACzB9D,cAGa+D,sBAVS,SAAAC,GAAK,MAAK,CAChClB,UAAWkB,EAAMlB,UACjBnC,MAAOqD,EAAMrD,MACbM,MAAO+C,EAAM/C,QASb6C,EAFaC,CAGbL","file":"static/js/home-page.67f175d9.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n  filmsLoadingActionCreator,\n  filmsSuccessActionCreator,\n  filmsErrorActionCreator,\n} from './filmsSearchActions';\n\nconst API_KEY = 'bcf1e9109b9838d979a3eda6f6128d7e';\n\nconst fetchFilms = query => dispatch => {\n  dispatch(filmsLoadingActionCreator());\n  axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`,\n    )\n    .then(response =>\n      dispatch(filmsSuccessActionCreator(response.data.results)),\n    )\n    .catch(error => dispatch(filmsErrorActionCreator(error)));\n};\nexport default fetchFilms;\n","import actionTypes from '../actionTypes';\n\nexport const filmsLoadingActionCreator = () => ({\n  type: actionTypes.FILM_LOADING,\n});\nexport const filmsSuccessActionCreator = films => ({\n  type: actionTypes.FILM_SEARCH_SUCCESS,\n  payload: {\n    films,\n  },\n});\nexport const filmsErrorActionCreator = error => ({\n  type: actionTypes.FILM_SEARCH_ERROR,\n  payload: {\n    error,\n  },\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Form = ({ fetchFilms }) => {\n  const [value, setValue] = useState('');\n  const handleValueChange = e => {\n    setValue(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchFilms(value);\n    setValue('');\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" onChange={handleValueChange} value={value} />\n\n        <button type=\"submit\"> Submit </button>\n      </form>\n    </div>\n  );\n};\nForm.propTypes = {\n  fetchFilms: PropTypes.func.isRequired,\n};\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FilmItem = ({ title, posterPath, voteAverage, overview }) => {\n  return (\n    <div className=\"filmWrapper\">\n      <img\n        src={\n          posterPath\n            ? `https://image.tmdb.org/t/p/w200/${posterPath}`\n            : 'https://www.viser.edu.rs/images/no_photo.jpeg'\n        }\n        alt=\"film poster\"\n      />\n      <div>\n        <h3> {title} </h3> <p>{voteAverage}</p> <p> {overview} </p>{' '}\n        <button type=\"button\"> Show more </button>{' '}\n      </div>{' '}\n    </div>\n  );\n};\nFilmItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  posterPath: PropTypes.string.isRequired,\n  voteAverage: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n};\n\nexport default FilmItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FilmItem from './FilmItem/FilmItem';\nimport Loader from '../Loader/Loader';\n\nconst FilmsContainer = ({ isLoading, films, error }) => {\n  if (error) {\n    console.log(error);\n  }\n  return (\n    <section>\n      {' '}\n      {isLoading && <Loader />}{' '}\n      {films.length > 0 &&\n        films.map(film => (\n          <FilmItem\n            key={film.id}\n            title={film.title}\n            posterPath={film.poster_path}\n            voteAverage={film.vote_average}\n            overview={film.overview}\n          />\n        ))}{' '}\n    </section>\n  );\n};\nFilmsContainer.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  films: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  error: PropTypes.string.isRequired,\n};\nexport default FilmsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Form from '../../components/Form/Form';\nimport FilmContainer from '../../components/FilmsContainer/FilmsContainer';\n\nconst Home = ({ fetchFilms, isLoading, films, error }) => {\n  return (\n    <>\n      <h2> Home </h2> <Form fetchFilms={fetchFilms} />\n      <FilmContainer isLoading={isLoading} films={films} error={error} />{' '}\n    </>\n  );\n};\nHome.propTypes = {\n  fetchFilms: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  films: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  error: PropTypes.string.isRequired,\n};\nexport default Home;\n","import { connect } from 'react-redux';\nimport fetchFilms from '../../redux/filmsSearch/filmsSearchOperations';\nimport Home from './Home';\n\nconst mapStateToProps = state => ({\n  isLoading: state.isLoading,\n  films: state.films,\n  error: state.error,\n});\n\nconst mapDispatchToProps = {\n  fetchFilms,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n\n// import { connect } from 'react-redux';\n// import fetchFilms from '../../redux/filmsSearch/filmsSearchOperations';\n// import App from './App';\n\n// const mapStateToProps = state => ({\n//   isLoading: state.isLoading,\n//   films: state.films,\n//   error: state.error,\n// });\n// const mapDispatchToProps = {\n//   fetchFilms,\n// };\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps,\n// )(App);\n"],"sourceRoot":""}